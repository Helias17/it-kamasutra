{"version":3,"sources":["components/content/dialogs/dialogs.module.css","hoc/withAuthRedirect.js","components/content/dialogs/dialogsUser.jsx","components/content/dialogs/dialogsMessage.jsx","components/content/dialogs/Dialogs.jsx","components/content/dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogsUser","className","css","user","id","username","DialogsMessage","message","Dialogs","DialogsUsersArray","users","map","MessagesArray","messages","dialogs","usersList","chat","value","newMessageBody","onChange","e","updateNewMessage","target","placeholder","onClick","sendMessage","DialogsContainer","compose","messagesPage","dispatch","body","updateNewMessageBodyCreator","sendMessageCreator"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,kJCG1JC,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,SAIRE,EAAmB,SAACC,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAJJ,GAEbC,IAAML,WAStC,OAFuCM,YAAQX,EAARW,CAAoCL,K,2ECfhEM,EAAc,SAACJ,GAC1B,OACE,oBAAIK,UAAWC,IAAIC,KAAnB,SACE,cAAC,IAAD,CAASN,GAAE,mBAAcD,EAAMQ,IAA/B,SAAsCR,EAAMS,cCJrCC,EAAiB,SAACV,GAC7B,OACE,mBAAGK,UAAWC,IAAIK,QAAlB,SACGX,EAAMW,WCqCEC,EApCC,SAACZ,GAEf,IAAMa,EAAoBb,EAAMc,MAAMC,KAAI,SAAAR,GAAI,OAAI,cAAC,EAAD,CAAaE,SAAUF,EAAKE,SAAwBD,GAAID,EAAKC,IAAlBD,EAAKC,OAE5FQ,EAAgBhB,EAAMiB,SAASF,KAAI,SAAAJ,GAAO,OAC9C,cAAC,EAAD,CAAgBA,QAASA,EAAQA,QAA0BH,GAAIG,EAAQH,IAAxBG,EAAQH,OAczD,OACE,sBAAKH,UAAWC,IAAIY,QAApB,UACE,oBAAIb,UAAWC,IAAIa,UAAnB,SACGN,IAEH,sBAAKR,UAAWC,IAAIc,KAApB,UACE,8BAAMJ,IACN,8BAAK,0BACHK,MAAOrB,EAAMsB,eACbC,SAfmB,SAACC,GAC1BxB,EAAMyB,iBAAiBD,EAAEE,OAAOL,QAe1BM,YAAY,yBACd,8BAAK,wBAAQC,QArBQ,WACzB5B,EAAM6B,eAoBG,mC,+BCVPC,EAAmBC,YACvB5B,aApBsB,SAACV,GACvB,MAAO,CACLqB,MAAOrB,EAAMuC,aAAalB,MAC1BG,SAAUxB,EAAMuC,aAAaf,SAC7BK,eAAgB7B,EAAMuC,aAAaV,mBAIZ,SAACW,GAC1B,MAAO,CACLR,iBAAkB,SAACS,GACjBD,EAASE,YAA4BD,KAEvCL,YAAa,SAACK,GACZD,EAASG,oBAObxC,IAFuBmC,CAGvBnB,GAEakB","file":"static/js/4.de1005c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__19iad\",\"usersList\":\"dialogs_usersList__1or7u\",\"user\":\"dialogs_user__2q48D\",\"chat\":\"dialogs_chat__3ulTF\",\"message\":\"dialogs_message__2wBDC\"};","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import css from './dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const DialogsUser = (props) => {\r\n  return (\r\n    <li className={css.user}>\r\n      <NavLink to={`/dialogs/${props.id}`}>{props.username}</NavLink>\r\n    </li>\r\n  )\r\n}","import css from './dialogs.module.css';\r\n\r\nexport const DialogsMessage = (props) => {\r\n  return (\r\n    <p className={css.message}>\r\n      {props.message}\r\n    </p>\r\n  )\r\n}","// import { Redirect } from 'react-router-dom';\r\nimport css from './dialogs.module.css';\r\nimport { DialogsUser } from './dialogsUser';\r\nimport { DialogsMessage } from './dialogsMessage';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const DialogsUsersArray = props.users.map(user => <DialogsUser username={user.username} key={user.id} id={user.id} />)\r\n\r\n  const MessagesArray = props.messages.map(message => (\r\n    <DialogsMessage message={message.message} key={message.id} id={message.id} />\r\n  )\r\n  )\r\n\r\n  const onSendMessageClick = () => {\r\n    props.sendMessage();\r\n  }\r\n\r\n  const onNewMessageChange = (e) => {\r\n    props.updateNewMessage(e.target.value);\r\n  }\r\n\r\n  // if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className={css.dialogs}>\r\n      <ul className={css.usersList}>\r\n        {DialogsUsersArray}\r\n      </ul>\r\n      <div className={css.chat}>\r\n        <div>{MessagesArray}</div>\r\n        <div><textarea\r\n          value={props.newMessageBody}\r\n          onChange={onNewMessageChange}\r\n          placeholder=\"Enter your message\"></textarea></div>\r\n        <div><button onClick={onSendMessageClick}>Send message</button></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../redux/messagesReducer';\r\n\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.messagesPage.users,\r\n    messages: state.messagesPage.messages,\r\n    newMessageBody: state.messagesPage.newMessageBody,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewMessage: (body) => {\r\n      dispatch(updateNewMessageBodyCreator(body));\r\n    },\r\n    sendMessage: (body) => {\r\n      dispatch(sendMessageCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}